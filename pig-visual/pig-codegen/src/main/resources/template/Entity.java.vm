/*
 *    Copyright (c) 2018-2025, lengleng All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * Neither the name of the pig4cloud.com developer nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 * Author: lengleng (wangiegie@gmail.com)
 */
#set($excludeColumns = ["create_time","update_time","create_by","update_by","tenant_id","del_flag"])
package ${package}.${moduleName}.entity;

import com.mybatisflex.annotation.Id;
import com.mybatisflex.annotation.KeyType;
import com.mybatisflex.annotation.Table;
import com.mybatisflex.core.keygen.KeyGenerators;
import com.pig4cloud.pig.common.mybatis.base.BaseEntity;
import com.pig4cloud.pig.common.mybatis.config.MybatisFlexBaseEntityInputListener;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;
import lombok.EqualsAndHashCode;
#if(${hasBigDecimal})
import java.math.BigDecimal;
#end

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Data
@Table(value = "${tableName}" ,
        mapperGenerateEnable = true,
        onInsert = MybatisFlexBaseEntityInputListener.class,
        onUpdate = MybatisFlexBaseEntityInputListener.class)
@EqualsAndHashCode(callSuper = true)
@Schema(description = "${comments}" )
public class ${className} extends BaseEntity{

#foreach ($column in $columns)
    ## 排除部分字段
    #if(!$excludeColumns.contains($column.columnName))
    /**
     * $column.comments
     */
        #if($column.columnName == $pk.columnName)
        @Id(keyType = KeyType.Generator, value = KeyGenerators.snowFlakeId)
        #end
    @Schema(description = "$column.comments"#if($column.hidden), hidden =$column.hidden#end)
    private $column.attrType $column.lowerAttrName;

    #end
#end

}
